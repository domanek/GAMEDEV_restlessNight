using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class LightVulnerability : MonoBehaviour
{
    [Header("General Parameters")]
    [SerializeField] private GameObject deathEffectPrefab;
    [SerializeField] private float timeToDie;

    private bool isInLight = false;
    private float timer = 0f;

    private void Update()
    {
        if (timer >= (timeToDie - (timeToDie / 4))) AudioManager.instance.PlayWithPitch("enemy_die", Random.Range(0.4f, 0.8f));
        if (timer >= timeToDie)
        {
            Die();
        }

        if (isInLight) IncreaseDieTimer();
        else DecreaseDieTimer();
    }

    public void SetLightStatus(bool value)
    {
        isInLight = value;
    }
    public bool GetLightStatus()
    {
        return isInLight;
    }

    public float GetLightTimer()
    {
        return timer;
    }

    private void IncreaseDieTimer()
    {
        timer += Time.deltaTime;
        timer = Mathf.Clamp(timer, 0, timeToDie);
    }
    private void DecreaseDieTimer()
    {
        timer -= Time.deltaTime;
        timer = Mathf.Clamp(timer, 0, timeToDie);
    }

    private void Die()
    {

        var effect = Instantiate(deathEffectPrefab, transform.position, deathEffectPrefab.transform.rotation);
        Debug.Log("effect boom!" + effect);
        Destroy(effect.gameObject, 1f);
        Destroy(this.gameObject, 0.1f);
    }
}
